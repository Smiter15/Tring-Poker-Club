---
import Layout from '@layouts/Layout.astro';

import Table from '@components/Table';

import styles from './games.module.css';

import type { MarkdownInstance } from 'astro';
import type { GameFrontmatter } from '../../types/game';

const gameFiles = import.meta.glob('../../content/game/*.md', {
  eager: true,
}) as Record<string, MarkdownInstance<GameFrontmatter>>;

const games = Object.values(gameFiles).map((g) => g.frontmatter);

const seasonsMap: Record<number, GameFrontmatter[]> = {};
games.forEach((g) => {
  (seasonsMap[g.season] ||= []).push(g);
});
const seasonNumbers = Object.keys(seasonsMap)
  .map(Number)
  .sort((a, b) => a - b);
seasonNumbers.forEach((s) =>
  seasonsMap[s].sort((a, b) => a.seasonGame - b.seasonGame),
);
---

<Layout title="Games">
  <div class={styles.container}>
    <section>
      <h2>Current season games</h2>
      <!-- <a href={`/seasons/${activeSeason.slug}`}>
        <strong class={styles.seasonHeader}>
          Season {activeSeason.name}
        </strong>
      </a> -->
    </section>

    <section>
      <h2>Previous season games</h2>
      {
        seasonNumbers.map((season) => {
          const tableData = seasonsMap[season].map((game) => ({
            game: game.seasonGame,
            date: game.date,
            numberOfPlayers: game.noOfPlayers,
            winner: game.winnerFirstName,
            playerSlug: game.winnerSlug,
            playerImage: game.winnerImage,
            navigate: `/games/${game.slug}`,
          }));

          return (
            <section>
              <h3>Season {season}</h3>
              <Table client:load data={tableData} />
            </section>
          );
        })
      }
    </section>
  </div>
</Layout>
