---
import { supabase } from 'src/db/supabase';

import Layout from '@layouts/Layout.astro';
import Table from '@components/Table';

import styles from './Games.module.css';

const { data: rawGames, error } = await supabase
  .from('games')
  .select(
    `
    slug,
    season_id,
    season_game,
    played_on,
    no_of_players,
    winner:players!games_winner_id_fkey (
      first_name,
      nickname,
      prefer_nickname,
      slug,
      image_url
    )
  `,
  )
  .order('season_id', { ascending: true })
  .order('season_game', { ascending: true });

if (error) {
  console.error('❌ Failed to load games:', error);
  throw new Error('Could not load games');
}

const games = rawGames.map((g: any) => ({
  slug: g.slug,
  seasonId: g.season_id,
  seasonGame: g.season_game,
  date: g.played_on,
  numberOfPlayers: g.no_of_players,
  winnerFirstName: g.winner?.prefer_nickname
    ? g.winner?.nickname
    : g.winner?.first_name,
  winnerSlug: g.winner?.slug ?? '',
  winnerImage: g.winner?.image_url ?? null,
}));

const seasonsMap: Record<number, typeof games> = {};
games.forEach((game) => {
  (seasonsMap[game.seasonId] ||= []).push(game);
});

const seasonNumbers = Object.keys(seasonsMap)
  .map(Number)
  .sort((a, b) => a - b);

const formatDate = (isoString: string) => {
  const d = new Date(isoString);
  const dd = String(d.getDate()).padStart(2, '0');
  const mm = String(d.getMonth() + 1).padStart(2, '0');
  const yy = String(d.getFullYear()).slice(-2);

  return `${dd}/${mm}/${yy}`;
};
---

<Layout title="Games">
  <div class={styles.container}>
    <section>
      <h2>Current season games</h2>
      <!-- <a href={`/seasons/${activeSeason.slug}`}>
        <strong class={styles.seasonHeader}>
          Season {activeSeason.name}
        </strong>
      </a> -->
    </section>

    <section>
      <h2>Previous season games</h2>
      {
        seasonNumbers.map((season) => {
          const tableData = seasonsMap[season].map((game) => ({
            game: game.seasonGame,
            date: formatDate(game.date),
            numberOfPlayers: game.numberOfPlayers,
            winner: game.winnerFirstName,
            playerSlug: game.winnerSlug,
            playerImage: game.winnerImage,
            navigate: `/games/${game.slug}`,
          }));

          return (
            <section>
              <h3>Season {season}</h3>
              <Table client:load data={tableData} />
            </section>
          );
        })
      }
    </section>
  </div>
</Layout>
